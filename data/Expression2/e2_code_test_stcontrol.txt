@name adaptive fiter OOP
@inputs But RF BI BD
@outputs PV WU CN TT EE RR P I D ZM VI VD
@persist T:ftrace E:entity C:stcontrol V2:vector2
@trigger
@model models/props_phx/construct/metal_wire1x1x1.mdl

if(first() || dupefinished())
{
    runOnTick(1)

    WU = 25000
    V2 = vec2(1.1,0.5)
    E = entity()
    # There is
    T = E:setFTrace(E:massCenterL(),vec(0,0,1), -225)
    T:putActionSkip("GetModel","models/props_trainstation/trainstation_clock001.mdl")
    T:putActionOnly("GetClass","prop_physics")
    T:useAction() # Otherwise no filter is used
    C = newStControl():setGain(1700, 6800, 8500):setWindup(-WU,WU):setPowerPI(V2):dumpItem("TEST")
    E:setMass(250)
}

#C:setIsDerivative(0)

PV = T:smpLocal():getFractionLen()
CN = C:setIsActive(But):setState(RF, PV):getControl()


TT = C:getTimeDelta()

E:applyForce(CN * vec(0,0,1))

EE = C:getErrorNow()        # The current error
RR = C:getTimeRatio()       # How much of the tick is used
BB = C:getTimeBench()       # Process benchmark time
P = C:getControlTermP()     # Value of P-term
I = C:getControlTermI()     # Value of I-term
D = C:getControlTermD()     # Value of D-term
ZM = C:getErrorDelta() / TT # Used to setup zero cross margin
VI = C:setIsIntegral(BI):isIntegral()
VD = C:setIsDerivative(BD):isDerivative()
